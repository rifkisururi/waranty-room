<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Pengguna extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pengguna_model');
        $this->load->model('Universal_model');
    }

    private function cekLogin()
    {
        if ($this->session->userdata("id") != null) {
            $id_pengguna = $this->session->userdata("id");
        } else {
            redirect('pengguna/login');
        }
    }

    /*
     * Listing of pengguna
     */
    function index()
    {
        $this->cekLogin();
        $data['pengguna'] = $this->Pengguna_model->get_all_pengguna();

        $data['_view'] = 'pengguna/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new pengguna
     */
    function add()
    {
        $this->cekLogin();
        if (isset($_POST) && count($_POST) > 0) {

            $this->load->helper(array('form', 'url'));
            $config['upload_path']          = './gambar/';
            $nmfile = date("Ymd") . date("his"); //nama file 
            $config['file_name'] = $nmfile; //nama yang terupload nantinya
            $config['allowed_types'] = 'gif|jpg|png|jpeg|bmp'; //type yang dapat diakses bisa anda sesuaikan

            $this->load->library('upload', $config);

            if (!$this->upload->do_upload('photo')) {
                $error = array('error' => $this->upload->display_errors());
                $params = array(
                    'role' => $this->input->post('role'),
                    'pass' => $this->input->post('pass'),
                    'nama' => $this->input->post('nama'),
                    'email' => $this->input->post('email'),
                    'nip' => $this->input->post('nip'),
                    'perusahaan' => $this->input->post('perusahaan'),
                    'alamat' => $this->input->post('alamat')
                );
            } else {
                $data = array('upload_data' => $this->upload->data());
                $data = $data['upload_data'];
                $params = array(
                    'role' => $this->input->post('role'),
                    'pass' => $this->input->post('pass'),
                    'nama' => $this->input->post('nama'),
                    'email' => $this->input->post('email'),
                    'nip' => $this->input->post('nip'),
                    'perusahaan' => $this->input->post('perusahaan'),
                    'alamat' => $this->input->post('alamat'),
                    'pic' => $data['orig_name']
                );
            }
            $pengguna_id = $this->Pengguna_model->add_pengguna($params);
            redirect('pengguna/index');
        } else {
            $data['_view'] = 'pengguna/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a pengguna
     */
    function edit($id)
    {
        $this->cekLogin();
        // check if the pengguna exists before trying to edit it
        $data['pengguna'] = $this->Pengguna_model->get_pengguna($id);

        if (isset($data['pengguna']['id'])) {
            if (isset($_POST) && count($_POST) > 0) {

                $this->load->helper(array('form', 'url'));
                $config['upload_path']          = './gambar/';
                $nmfile = date("Ymd") . date("his"); //nama file 
                $config['file_name'] = $nmfile; //nama yang terupload nantinya
                $config['allowed_types'] = 'gif|jpg|png|jpeg|bmp'; //type yang dapat diakses bisa anda sesuaikan

                $this->load->library('upload', $config);

                if (!$this->upload->do_upload('photo')) {
                    $error = array('error' => $this->upload->display_errors());
                    $params = array(
                        'role' => $this->input->post('role'),
                        'pass' => $this->input->post('pass'),
                        'nama' => $this->input->post('nama'),
                        'email' => $this->input->post('email'),
                        'nip' => $this->input->post('nip'),
                        'perusahaan' => $this->input->post('perusahaan'),
                        'alamat' => $this->input->post('alamat'),
                    );
                } else {
                    $data = array('upload_data' => $this->upload->data());
                    $data = $data['upload_data'];
                    $params = array(
                        'role' => $this->input->post('role'),
                        'pass' => $this->input->post('pass'),
                        'nama' => $this->input->post('nama'),
                        'email' => $this->input->post('email'),
                        'nip' => $this->input->post('nip'),
                        'perusahaan' => $this->input->post('perusahaan'),
                        'alamat' => $this->input->post('alamat'),
                        'pic' => $data['orig_name']
                    );

                    echo $data['orig_name'];
                }

                $this->Pengguna_model->update_pengguna($id, $params);
                redirect('pengguna/index');
            } else {
                $data['_view'] = 'pengguna/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The pengguna you are trying to edit does not exist.');
    }

    /*
     * Deleting pengguna
     */
    function remove($id)
    {
        $this->cekLogin();
        $pengguna = $this->Pengguna_model->get_pengguna($id);

        // check if the pengguna exists before trying to delete it
        if (isset($pengguna['id'])) {
            $this->Pengguna_model->delete_pengguna($id);
            redirect('pengguna/index');
        } else
            show_error('The pengguna you are trying to delete does not exist.');
    }

    function login()
    {
        $this->load->view('pengguna/login');
    }

    function login_Action()
    {
        $email = $this->input->post('email');
        $password = $this->input->post('password');

        $where = array(
            'email' => $email,
            'pass' => $password //md5($password)
        );

        $cek = $this->Universal_model->cek_data("pengguna", $where)->num_rows();

        if ($cek == 1) {
            // login berhasi

            $query = "select * from pengguna where email = '$email'";
            $nama = $this->Universal_model->getOneValue($query)->nama;
            $id = $this->Universal_model->getOneValue($query)->id;
            $role = $this->Universal_model->getOneValue($query)->role;
            $pic = $this->Universal_model->getOneValue($query)->pic;

            $data_session = array(
                'id' => $id,
                'nama' => $nama,
                'role' => $role,
                'pic' => $pic,
                'status' => "login"
            );

            $this->session->set_userdata($data_session);
            $message = "login sukses";
            echo "<script type='text/javascript'>alert('$message');</script>";

            redirect(base_url(''));
        } else {

            $message = "login gagal";
            echo "<script type='text/javascript'>alert('$message');</script>";
            redirect(base_url(''));
        }
    }

    function logout()
    {
        $this->session->sess_destroy();
        redirect(base_url(''));
    }

    function profile()
    {
        $id = $this->session->userdata("id");
        $query = "select * from pengguna where id = $id";

        $data['nama'] = $this->Universal_model->getOneValue($query)->nama;
        $data['email'] = $this->Universal_model->getOneValue($query)->email;
        $data['nip'] = $this->Universal_model->getOneValue($query)->nip;
        $data['perusahaan'] = $this->Universal_model->getOneValue($query)->perusahaan;
        $data['alamat'] = $this->Universal_model->getOneValue($query)->alamat;

        $data['_view'] = 'pengguna/profile';
        $this->load->view('layouts/main', $data);
    }
}
