<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Claim extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Claim_model');
        $this->load->model('Pengguna_model');
        $this->load->model('Universal_model');

        if ($this->session->userdata("id") != null) {
            $id_pengguna = $this->session->userdata("id");
        } else {
            redirect('pengguna/login');
        }
    }

    /*
     * Listing of claim
     */

    private function cekIdPengguna()
    {
        $id_pengguna = $this->session->userdata("id");
        return $id_pengguna;
    }

    private function cekRole()
    {
        $role = $this->session->userdata("role");
        return $role;
    }

    function listClaim($status)
    {
        $role = $this->cekRole();
        if ($role == 1) {
            // admin
            $dataClaim = $this->Claim_model->get_all_claim_v3_admin($status);
        } elseif ($role == 2) {
            // inspector
            $dataClaim = $this->Claim_model->get_all_claim_v3_inspector($status);
        } else {
            // user
            $dataClaim = $this->Claim_model->get_all_claim_v3_member($status);
        }
        $data['claim'] = $dataClaim;
        $data['all_investigator'] = $this->Pengguna_model->get_all_investigator();

        $data['_view'] = 'claim/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new claim
     */
    function add()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $number = date("Ymd") . date("his");
            $create_date = date("Y-m-d");
            $params = array(
                'id_investigasi' => $this->input->post('id_investigasi'),
                'tanggal_pengembalian' => $this->input->post('tanggal_pengembalian'),
                'number' => $number,
                'vin' => $this->input->post('vin'),
                'tipe_claim' => $this->input->post('tipe_claim'),
                'nomor_mesin' => $this->input->post('nomor_mesin'),
                'odometer' => $this->input->post('odometer'),
                'tanggal_beli' => $this->input->post('tanggal_beli'),
                'tanggal_pengambilan' => $this->input->post('tanggal_pengambilan'),
                'create_date' => $create_date,
                'id_pengguna' => $this->cekIdPengguna(),
                'status_claim' => 1,
                'permasalahan' => $this->input->post('permasalahan'),
                'note' => $this->input->post('note'),
                'part_validation' =>  $this->input->post('pv'),
            );

            $claim_id = $this->Claim_model->add_claim($params);
            redirect('claim/index');
        } else {
            $this->load->model('Pengguna_model');
            $data['all_pengguna'] = $this->Pengguna_model->get_all_pengguna();

            $data['_view'] = 'claim/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a claim
     */
    function edit($id)
    {
        // check if the claim exists before trying to edit it
        $data['claim'] = $this->Claim_model->get_claim($id);

        if (isset($data['claim']['id'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'id_investigasi' => $this->input->post('id_investigasi'),
                    'tanggal_pengembalian' => $this->input->post('tanggal_pengembalian'),
                    'number' => $this->input->post('number'),
                    'tipe_claim' => $this->input->post('tipe_claim'),
                    'nomor_mesin' => $this->input->post('nomor_mesin'),
                    'odometer' => $this->input->post('odometer'),
                    'tanggal_beli' => $this->input->post('tanggal_beli'),
                    'tanggal_pengambilan' => $this->input->post('tanggal_pengambilan'),
                    'create_date' => $this->input->post('create_date'),
                    'id_pengguna' => $this->input->post('id_pengguna'),
                    'status_claim' => $this->input->post('status_claim'),
                    'permasalahan' => $this->input->post('permasalahan'),
                    'note' => $this->input->post('note'),
                );

                $this->Claim_model->update_claim($id, $params);
                redirect('claim/index');
            } else {
                $this->load->model('Pengguna_model');
                $data['all_pengguna'] = $this->Pengguna_model->get_all_pengguna();

                $data['_view'] = 'claim/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The claim you are trying to edit does not exist.');
    }

    /*
     * Deleting claim
     */
    function remove($id)
    {
        $claim = $this->Claim_model->get_claim($id);

        // check if the claim exists before trying to delete it
        if (isset($claim['id'])) {
            $this->Claim_model->delete_claim($id);
            redirect('claim/index');
        } else
            show_error('The claim you are trying to delete does not exist.');
    }

    function proses($id, $investator)
    {
        $query = "update claim set id_investigasi = $investator, status_claim = 2 where id = $id";
        $this->Universal_model->execQuery($query);
    }

    function print($id)
    {
        $query = "select c.*, p.nama  as namaCleint, p2.nama  as namaInspector, c.tipe_claim as claimType, p.perusahaan
        from claim c 
        inner join pengguna p on c.id_pengguna  = p.id
        LEFT  join pengguna p2 on c.id_investigasi  = p2.id 
        where c.id = $id";

        $nomor =  $this->Universal_model->getOneValue($query)->number;
        $tanggal_pengambilan =  $this->Universal_model->getOneValue($query)->tanggal_pengambilan;
        $namaInspector =  $this->Universal_model->getOneValue($query)->namaInspector;
        $claimType =  $this->Universal_model->getOneValue($query)->claimType;
        $perusahaan =  $this->Universal_model->getOneValue($query)->perusahaan;
        $vin =  $this->Universal_model->getOneValue($query)->vin;
        $nomor_mesin =  $this->Universal_model->getOneValue($query)->nomor_mesin;
        $tanggal_beli =  $this->Universal_model->getOneValue($query)->tanggal_beli;
        $permasalahan =  $this->Universal_model->getOneValue($query)->permasalahan;
        $odometer =  $this->Universal_model->getOneValue($query)->odometer;


        require_once 'vendor/autoload.php';

        $mpdf = new \Mpdf\Mpdf();

        $mpdf->WriteHTML("<img src='img/logo.png'>");
        $mpdf->WriteHTML('<h2>PT JTEK INDONESIA</h2>');
        $mpdf->WriteHTML(" nomor claim $nomor ");
        $mpdf->WriteHTML(" tanggal pengambilan $tanggal_pengambilan ");
        $mpdf->WriteHTML(" Inspector $namaInspector ");
        $mpdf->WriteHTML("
            
            <table border='1'>
                <tr>
                    <th colspan=2>Data Kendaraan</th><th>Customer</th>
                </tr>
                <tr>
                    <td>Tipe</td>
                    <td>$claimType</td>
                    <td rowspan=6>
                    $perusahaan
                    </td>
                </tr>
                <tr><td>VIN</td><td>$vin</td></tr>
                <tr><td>Nomor Mesin</td><td>$nomor_mesin</td></tr>
                <tr><td>Odometer</td><td>$odometer</td></tr>
                <tr><td>Tanggal Beli</td><td>$tanggal_beli</td></tr>
                <tr><td>Permasalahan</td><td>$permasalahan</td></tr>
                    

            </table> 
            <br>
            <br>
            
            <table border='1'>
            <tr>
                <td>Penerima</td>
                <td>Pemberi</td>
            </tr>
            <tr>
                <td>
                <br><br><br><br>
                ____________________________________________
                </td>
                <td>
                <br><br><br><br>
                ____________________________________________
                </td>
            </tr>
            </table>
            

        ");


        $mpdf->Output();
    }

    function action($id, $note, $status_claim, $tanggal)
    {
        $note = str_replace('%20', ' ', $note);
        $query = "update claim set note = '$note' , status_claim = $status_claim, tanggal_pengembalian = '$tanggal' where id = $id";
        $this->Universal_model->execQuery($query);
    }

    function selesai($id)
    {
        $query = "update claim set status_claim = 5 where id = $id; ";
        $this->Universal_model->execQuery($query);
    }
}
